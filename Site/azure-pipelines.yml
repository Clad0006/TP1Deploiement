# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: "default"

variables:
  - name: resourceGroupName
    value: 'TP1Deploiement'
  - name: location
    value: 'canadacentral'
  - name: FileName
    value: 'CustomExtension.ps1'
  - name: FileURL
    value: 'defaultValue'

jobs:
  - job: ConfigurationFileTest
    displayName: Configuration File Test

    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploying Storage Account
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(167fcb55-1d31-4096-90a8-f9e0a30d3853)'
        subscriptionId: '167fcb55-1d31-4096-90a8-f9e0a30d3853'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)\Site\StorageAccount\azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)\Site\StorageAccount\azuredeploy.parameters.json'
        deploymentMode: 'Validation'

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploying VM
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(167fcb55-1d31-4096-90a8-f9e0a30d3853)'
        subscriptionId: '167fcb55-1d31-4096-90a8-f9e0a30d3853'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)\Site\VMwindows\azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)\Site\VMwindows\azuredeploy.parameters.json'
        overrideParameters: '-FileURI $(FileURL) -FileName $(FileName) -adminPassword $(AdminPass)'
        deploymentMode: 'Validation'

  - job: InfrastructureDeployment
    displayName: Infrastructure Deployement
    dependsOn: ConfigurationFileTest
    condition: succeeded()

    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploying Storage Account
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(167fcb55-1d31-4096-90a8-f9e0a30d3853)'
        subscriptionId: '167fcb55-1d31-4096-90a8-f9e0a30d3853'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)\Site\StorageAccount\azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)\Site\StorageAccount\azuredeploy.parameters.json'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'StorageAccountDeployment'

    - task: PowerShell@2
      displayName: Pushing PowerShell File onto Storage Account
      inputs:
        targetType: inline
        script: |
              Write-Host $(StorageAccountDeployment.storageName.Value)
              Write-Host $(StorageAccountDeployment.storageKey.Value)
              Write-Host $(StorageAccountDeployment.storageContainer.Value)

              $context = New-AzStorageContext -StorageAccountName $(StorageAccountDeployment.storageName.Value) -StorageAccountKey $(StorageAccountDeployment.storageKey.Value)
              $setParams = @{
                  Container =  $(StorageAccountDeployment.storageContainer.Value)
                  File      = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine('$(Build.SourcesDirectory)', './Site/VMwindows/$(FileName)'))
                  Context   = $context
              }
              Write-Host $setParams.File

              $blob = Set-AzStorageBlobContent @setParams -Force
              $url = $blob.ICloudBlob.Uri.AbsoluteUri

              Write-Host $url

              Write-Host "##vso[task.setvariable variable=FileURL]$url"

    - task: PowerShell@2
      displayName: Test Value
      inputs:
        targetType: 'inline'
        script: |
              Write-Host $(FileURL)

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploying VM
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure subscription 1(167fcb55-1d31-4096-90a8-f9e0a30d3853)'
        subscriptionId: '167fcb55-1d31-4096-90a8-f9e0a30d3853'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)\Site\VMwindows\azuredeploy.json'
        csmParametersFile: '$(Build.SourcesDirectory)\Site\VMwindows\azuredeploy.parameters.json'
        overrideParameters: '-FileURI $(FileURL) -FileName $(FileName)'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'StorageAccountDeployment'