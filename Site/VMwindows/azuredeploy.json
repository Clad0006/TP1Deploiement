{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",  
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "networkInterfaceName1": {
      "type": "string"
    },
    "enableAcceleratedNetworking": {
      "type": "bool"
    },
    "networkSecurityGroupName": {
      "type": "string"
    },
    "networkSecurityGroupRules": {
      "type": "array"
    },
    "subnetName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "addressPrefixes": {
      "type": "array"
    },
    "subnets": {
      "type": "array"
    },
    "publicIpAddressName1": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "publicIpAddressSku": {
      "type": "string"
    },
    "pipDeleteOption": {
      "type": "string"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineName1": {
      "type": "string"
    },
    "virtualMachineComputerName1": {
      "type": "string"
    },
    "virtualMachineRG": {
      "type": "string"
    },
    "osDiskType": {
      "type": "string"
    },
    "osDiskDeleteOption": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "nicDeleteOption": {
      "type": "string"
    },
    "hibernationEnabled": {
      "type": "bool"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    },
    "patchMode": {
      "type": "string"
    },
    "enableHotpatching": {
      "type": "bool"
    },
    "rebootSetting": {
      "type": "string"
    },
    "securityType": {
      "type": "string"
    },
    "secureBoot": {
      "type": "bool"
    },
    "vTPM": {
      "type": "bool"
    },
    "virtualMachine1Zone": {
      "type": "string"
    },
    "FileName": {
      "type": "string"
    },
    "FileURI": {
      "type": "string"
    },
    "virtualNetworkId": {
      "type": "string"
    },
    "networkSecurityGroups": {
      "type": "array"
    },
    "networkInterfaceConfigurations": {
      "type": "array"
    },
    "backendPoolName": {
      "type": "string"
    },
    "loadBalancerName": {
      "type": "string"
    },
    "loadbalancingRuleFrontEndPort": {
      "type": "int"
    },
    "loadbalancingRuleBackendEndPort": {
      "type": "int"
    },
    "loadbalancingRuleProtocol": {
      "type": "string"
    },
    "InboundNATRuleFrontEndPortRangeStart": {
      "type": "int"
    },
    "vmName": {
      "type": "string"
    },
    "virtualMachineScaleSetName": {
      "type": "string"
    },
    "instanceCount": {
      "type": "string"
    },
    "instanceSize": {
      "type": "string"
    },
    "platformFaultDomainCount": {
      "type": "string"
    },
    "scaleInPolicy": {
      "type": "object"
    },
    "upgradePolicy": {
      "type": "string"
    }
  },
  "variables": {
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "storageApiVersion": "2021-01-01",
    "networkApiVersion": "2020-11-01",
    "virtualMachineScaleSetApiVersion": "2023-09-01",
    "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]"
  },
  "resources": [
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-01-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "subnets": "[parameters('subnets')]"
      }
    },
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRules')]"
      }
    },
    {
      "name": "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "idleTimeoutInMinutes": 15
      },
      "sku": {
        "name": "Standard"
      },
      "zones": []
    },
    {
      "name": "[parameters('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-05-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[concat(parameters('loadBalancerName'), '-frontendconfig01')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('backendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[concat(parameters('loadBalancerName'), '-lbrule01')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
              },
              "frontendPort": "[parameters('loadbalancingRuleFrontEndPort')]",
              "backendPort": "[parameters('loadbalancingRuleBackendEndPort')]",
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "disableOutboundSnat": true,
              "loadDistribution": "Default",
              "protocol": "[parameters('loadbalancingRuleProtocol')]",
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-probe01'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[concat(parameters('loadBalancerName'), '-probe01')]",
            "properties": {
              "intervalInSeconds": 15,
              "numberOfProbes": 2,
              "requestPath": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), json('null'), '/')]",
              "port": "[if(equals(parameters('loadbalancingRuleProtocol'), 'Tcp'), parameters('loadbalancingRuleBackendEndPort'), '80')]",
              "protocol": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), 'Tcp', 'Http')]"
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "[concat(parameters('loadBalancerName'), '-natRule01')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
              },
              "protocol": "TCP",
              "enableFloatingIP": false,
              "enableTcpReset": false,
              "backendPort": 22,
              "frontendPortRangeStart": "[parameters('InboundNATRuleFrontEndPortRangeStart')]",
              "frontendPortRangeEnd": "[add(parameters('InboundNATRuleFrontEndPortRangeStart'), if(equals(parameters('instanceCount'), json('null')), 0, 3599))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', concat(parameters('loadBalancerName'), '-publicip'))]"
      ]
    },
    {
      "name": "[parameters('virtualMachineScaleSetName')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('virtualMachineScaleSetApiVersion')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "virtualMachineProfile": {
          "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "deleteOption": "[parameters('osDiskDeleteOption')]"
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition-hotpatch",
            "version": "latest"
          }
          },
          "networkProfile": {
            "networkApiVersion": "[variables('networkApiVersion')]",
            "copy": [
              {
                "name": "networkInterfaceConfigurations",
                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                "input": {
                  "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                  "properties": {
                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                    "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                    "ipConfigurations": [
                      {
                        "name": "[concat(take(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, sub(80, length('-defaultIpConfiguration'))), '-defaultIpConfiguration')]",
                        "properties": {
                          "subnet": {
                            "id": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].subnetId]"
                          },
                          "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                          "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                          "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                          "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                        }
                      }
                    ],
                    "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                  }
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": []
          },
          "osProfile": {
          "computerName": "[parameters('virtualMachineComputerName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true,
            "patchSettings": {
              "enableHotpatching": "[parameters('enableHotpatching')]",
              "patchMode": "[parameters('patchMode')]",
              "automaticByPlatformSettings": {
                "rebootSetting": "[parameters('rebootSetting')]"
              }
            }
          }
        },
          "securityProfile": {
          "securityType": "[parameters('securityType')]",
          "uefiSettings": {
            "secureBootEnabled": "[parameters('secureBoot')]",
            "vTpmEnabled": "[parameters('vTPM')]"
          }
          }
        },
        "orchestrationMode": "Flexible",
        "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
        "scaleInPolicy": "[parameters('scaleInPolicy')]",
        "upgradePolicy": {
          "mode": "[parameters('upgradePolicy')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        }
      },
      "sku": {
        "name": "[parameters('instanceSize')]",
        "capacity": "[int(parameters('instanceCount'))]"
      },
      "identity": {
        "type": "systemAssigned"
      },
      "zones": [
        "[parameters('virtualMachine1Zone')]"
      ]
    },
    {
      "name": "[parameters('networkInterfaceName1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                "properties": {
                  "deleteOption": "[parameters('pipDeleteOption')]"
                }
              }
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "Microsoft.CustomScriptExtension1",
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://catalogartifact.azureedge.net/publicartifacts/Microsoft.CustomScriptExtension-arm-2.0.58/MainTemplate.json"
        },
        "parameters": {
          "fileUris": {
            "value": "[parameters('FileURI')]"
          },
          "arguments": {
            "value": "powershell.exe -ExecutionPolicy Unrestricted -File [parameters('FileName')]"
          },
          "vmName": {
            "value": "[parameters('virtualMachineName1')]"
          },
          "location": {
            "value": "eastus"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName1'))]"
      ]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}